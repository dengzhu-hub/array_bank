{"mappings":"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","sources":["<anon>","script.js"],"sourcesContent":["\"use strict\";\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// BANKIST APP\n// Data\nconst account1 = {\n    owner: \"Jonas Schmedtmann\",\n    movements: [\n        200,\n        450,\n        -400,\n        3000,\n        -650,\n        -130,\n        70,\n        1300\n    ],\n    interestRate: 1.2,\n    pin: 1111,\n    movementsDates: [\n        \"2019-11-18T21:31:17.178Z\",\n        \"2019-12-23T07:42:02.383Z\",\n        \"2020-01-28T09:15:04.904Z\",\n        \"2020-04-01T10:17:24.185Z\",\n        \"2020-05-08T14:11:59.604Z\",\n        \"2020-05-27T17:01:17.194Z\",\n        \"2023-03-07T10:32:34.600Z\",\n        \"2023-03-08T10:32:34.600Z\"\n    ],\n    currency: \"EUR\",\n    locale: \"pt-PT\"\n};\nconst account2 = {\n    owner: \"Jessica Davis\",\n    movements: [\n        5000,\n        3400,\n        -150,\n        -790,\n        -3210,\n        -1000,\n        8500,\n        -30\n    ],\n    interestRate: 1.5,\n    pin: 2222,\n    movementsDates: [\n        \"2019-11-01T13:15:33.035Z\",\n        \"2019-11-30T09:48:16.867Z\",\n        \"2019-12-25T06:04:23.907Z\",\n        \"2020-01-25T14:18:46.235Z\",\n        \"2020-02-05T16:33:06.386Z\",\n        \"2020-04-10T14:43:26.374Z\",\n        \"2020-06-25T18:49:59.371Z\",\n        \"2020-07-26T12:01:20.894Z\"\n    ],\n    currency: \"USD\",\n    locale: \"en-US\"\n};\nconst account3 = {\n    owner: \"Steven Thomas Williams\",\n    movements: [\n        200,\n        -200,\n        340,\n        -300,\n        -20,\n        50,\n        400,\n        -460\n    ],\n    interestRate: 0.7,\n    pin: 3333,\n    movementsDates: [\n        \"2019-11-01T13:15:33.035Z\",\n        \"2019-11-30T09:48:16.867Z\",\n        \"2019-12-25T06:04:23.907Z\",\n        \"2020-01-25T14:18:46.235Z\",\n        \"2020-02-05T16:33:06.386Z\",\n        \"2020-04-10T14:43:26.374Z\",\n        \"2020-06-25T18:49:59.371Z\",\n        \"2020-07-26T12:01:20.894Z\"\n    ],\n    currency: \"OMR\",\n    locale: \"ar-OM\"\n};\nconsole.log(account3[\"movements\"]);\nconst account4 = {\n    owner: \"Sarah Smith\",\n    movements: [\n        430,\n        1000,\n        700,\n        50,\n        90\n    ],\n    interestRate: 1,\n    pin: 4444,\n    movementsDates: [\n        \"2019-11-01T13:15:33.035Z\",\n        \"2019-11-30T09:48:16.867Z\",\n        \"2019-12-25T06:04:23.907Z\",\n        \"2020-01-25T14:18:46.235Z\",\n        \"2020-02-05T16:33:06.386Z\",\n        \"2020-04-10T14:43:26.374Z\",\n        \"2020-06-25T18:49:59.371Z\",\n        \"2020-07-26T12:01:20.894Z\"\n    ],\n    currency: \"DKK\",\n    locale: \"da-DK\"\n};\nconst account5 = {\n    owner: \"jack Deng keng\",\n    movements: [\n        1000,\n        2000,\n        5000,\n        900000,\n        -100000,\n        442423\n    ],\n    interestRate: 2.3,\n    pin: 5555,\n    movementsDates: [\n        \"2019-11-01T13:15:33.035Z\",\n        \"2019-11-30T09:48:16.867Z\",\n        \"2019-12-25T06:04:23.907Z\",\n        \"2020-01-25T14:18:46.235Z\",\n        \"2020-02-05T16:33:06.386Z\",\n        \"2020-04-10T14:43:26.374Z\"\n    ],\n    currency: \"CNY\",\n    locale: \"zh-CN\"\n};\nconst accounts = [\n    account1,\n    account2,\n    account3,\n    account4,\n    account5\n];\n// Elements\nconst labelWelcome = document.querySelector(\".welcome\");\nconst labelDate = document.querySelector(\".date\");\nconst labelBalance = document.querySelector(\".balance__value\");\nconst labelSumIn = document.querySelector(\".summary__value--in\");\nconst labelSumOut = document.querySelector(\".summary__value--out\");\nconst labelSumInterest = document.querySelector(\".summary__value--interest\");\nconst labelTimer = document.querySelector(\".timer\");\nconst containerApp = document.querySelector(\".app\");\nconst containerMovements = document.querySelector(\".movements\");\nconst btnLogin = document.querySelector(\".login__btn\");\nconst btnTransfer = document.querySelector(\".form__btn--transfer\");\nconst btnLoan = document.querySelector(\".form__btn--loan\");\nconst btnClose = document.querySelector(\".form__btn--close\");\nconst btnSort = document.querySelector(\".btn--sort\");\nconst inputLoginUsername = document.querySelector(\".login__input--user\");\nconst inputLoginPin = document.querySelector(\".login__input--pin\");\nconst inputTransferTo = document.querySelector(\".form__input--to\");\nconst inputTransferAmount = document.querySelector(\".form__input--amount\");\nconst inputLoanAmount = document.querySelector(\".form__input--loan-amount\");\nconst inputCloseUsername = document.querySelector(\".form__input--user\");\nconst inputClosePin = document.querySelector(\".form__input--pin\");\nconst modal = document.querySelector(\".modal\");\n// modal.style.display = 'block';\nconst overlay = document.querySelector(\".overlay\");\nconst btnCloseModal = document.querySelector(\".close-modal\");\nconst btnShowModal = document.querySelectorAll(\".show-modal\");\n//Modal\nconst closeModal = function() {\n    modal.classList.add(\"hidden\");\n    overlay.classList.add(\"hidden\");\n};\nwindow.onload = function() {\n    modal.classList.remove(\"hidden\");\n    overlay.classList.remove(\"hidden\");\n};\noverlay.addEventListener(\"click\", closeModal);\nbtnCloseModal.addEventListener(\"click\", closeModal);\ndocument.addEventListener(\"keydown\", function(e) {\n    console.log(e.key);\n    if (e.key === \"Escape\" && !modal.classList.contains(\"hidden\")) closeModal();\n});\n// btnCloseModal.addEventListener('click', closeModal);\n// function\nconst options = {\n    year: \"numeric\",\n    month: \"numeric\",\n    day: \"numeric\"\n};\nconst formatMovements = function(date, locale) {\n    const calcDatePassed = (date1, date2)=>Math.round(Math.abs(date2 - date1) / 86400000);\n    const daysPassed = calcDatePassed(new Date(), date);\n    console.log(daysPassed);\n    if (daysPassed === 0) return \"Today\";\n    else if (daysPassed === 1) return \"Yesterday\";\n    else if (daysPassed <= 7) return `${daysPassed} days ago`;\n    //  return `${day}/${month}/${year}`;\n    return new Intl.DateTimeFormat(locale).format(date);\n};\n// FORMATcurrency\nconst formatCur = function(value, locale, currency) {\n    return new Intl.NumberFormat(locale, {\n        style: \"currency\",\n        currency: currency\n    }).format(value);\n};\nconst updateUI = function(acc) {\n    displayMovements(acc);\n    calcDisplayBalance(acc);\n    calcDisplaySummary(acc);\n};\nconst startLogoutTimer = function() {\n    const trick = function() {\n        // set time to 5 minute\n        const min = String(Math.floor(time / 60)).padStart(2, \"0\");\n        const sec = String(time % 60).padStart(2, \"0\");\n        labelTimer.textContent = `${min}:${sec}`;\n        //When 0 seconds, stop timer and logg out user\n        if (time === 0) {\n            clearInterval(timer);\n            labelWelcome.textContent = \"Log in to get started\";\n            containerApp.style.opacity = \"0\";\n        }\n        time--;\n    };\n    // set time to 5 minute\n    let time = 300;\n    // call the timer every second\n    trick();\n    const timer = setInterval(trick, 1000);\n    return timer;\n// In each call, print the remaining time to UI\n};\n// arrow function\nconst displayMovements = (acc, sort = false)=>{\n    const movs = sort ? acc.movements.slice().sort((a, b)=>a - b) : acc.movements;\n    containerMovements.innerHTML = \"\"; //将内部文字清空;\n    movs.forEach((mov, i)=>{\n        const type = mov > 0 ? \"deposit\" : \"withdrawal\";\n        const date = new Date(acc.movementsDates[i]);\n        const displayDate = formatMovements(date, acc.locale);\n        const displayMov = formatCur(mov, acc.locale, acc.currency);\n        const html = `\r\n    <div class=\"movements__row\">\r\n    <div class=\"movements__type movements__type--${type}\">${i + 1} ${type}</div>\r\n    <div class=\"movements__date\">${displayDate}</div>\r\n    <div class=\"movements__value\">${displayMov}</div>\r\n  </div>\r\n    `;\n        containerMovements.insertAdjacentHTML(\"afterbegin\", html);\n    });\n};\n// displayMovements(account1.movements);\n// console.log(containerMovements.innerHTML);\nconst createUser = (accs)=>{\n    accs.forEach((acc)=>{\n        acc.userName = acc.owner.toLowerCase().split(\" \").map((word)=>word[0]).join(\"\");\n    });\n};\ncreateUser(accounts);\nconsole.log(accounts);\nconst calcDisplaySummary = (acc)=>{\n    const income = acc.movements.filter((mov)=>mov > 0).reduce((acc, cur)=>acc + cur, 0);\n    labelSumIn.textContent = formatCur(income, acc.locale, acc.currency);\n    const outCome = acc.movements.filter((mov)=>mov < 0).reduce((acc, cur)=>acc + cur, 0);\n    labelSumOut.textContent = formatCur(Math.abs(outCome), acc.locale, acc.currency);\n    const interest = acc.movements.filter((mov)=>mov > 0).map((mov)=>mov * acc.interestRate / 100).reduce((acc, cur)=>acc + cur, 0);\n    labelSumInterest.textContent = formatCur(interest, acc.locale, acc.currency);\n};\n// calcDisplaySummary(account2.movements);\nconst calcDisplayBalance = (acc)=>{\n    acc.balance = acc.movements.reduce((acc, cur)=>acc + cur, 0);\n    labelBalance.textContent = formatCur(acc.balance, acc.locale, acc.currency);\n};\n// calcDisplayBalance(account2.movements);\n// event listener\nlet currentAccount, timer;\n// currentAccount = account1;\n// updateUI(currentAccount);\n// containerApp.style.opacity = 100;\n// Experimenting API \n// const locale = navigator.language;\n// console.log(locale);\n// const dates = new Date();\n// const options = {\n//   // weekday: 'long',\n//   year: 'numeric',\n//   month: 'numeric',\n//   day: 'numeric',\n//   hour: '2-digit',\n//   minute: 'numeric',\n//   // second: 'numeric',\n//   // hour12: true,\n//   // timeZone: 'Asia/Shanghai'\n// }\n// labelDate.textContent = new Intl.DateTimeFormat(currentAccount.locale, options).format(dates);\nlet sorted = false;\nbtnSort.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    displayMovements(currentAccount, !sorted);\n    sorted = !sorted;\n});\nbtnLogin.addEventListener(\"click\", (e)=>{\n    e.preventDefault();\n    console.log(\"Logined\");\n    currentAccount = accounts.find((acc)=>acc.userName === inputLoginUsername.value);\n    console.log(currentAccount);\n    // ?. option operation\n    if (currentAccount?.pin === Number(inputLoginPin.value)) {\n        // display UI  and message\n        labelWelcome.textContent = `Welcome back, ${currentAccount.owner.split(\" \")[0]}`;\n        containerApp.style.opacity = 100;\n        // Create current date and time \n        // const now = new Date();\n        // const day = `${now.getDate()}`.padStart(2, 0);\n        // const month = `${now.getMonth() + 1}`.padStart(2, 0);\n        // const year = now.getFullYear();\n        // const min = now.getMinutes();\n        // const hours = now.getHours();\n        // const sec = now.getSeconds();\n        // labelDate.textContent = `${day}/${month}/${year},${hours}:${min}`;\n        // display movements and summary balance\n        const date = new Date();\n        const options = {\n            year: \"numeric\",\n            month: \"long\",\n            day: \"numeric\",\n            hour: \"numeric\",\n            minute: \"numeric\",\n            weekday: \"long\"\n        };\n        labelDate.textContent = new Intl.DateTimeFormat(currentAccount.locale, options).format(date);\n        //Timer\n        if (timer) clearInterval(timer);\n        timer = startLogoutTimer();\n        // clear inputLogin\n        inputLoginUsername.value = inputLoginPin.value = \"\";\n        inputCloseUsername.value = inputClosePin.value = \"\";\n        updateUI(currentAccount);\n        // const inputLoginUsenameAtt = inputLoginUsername.getAttribute('class');\n        // console.log(inputLoginUsenameAtt);\n        inputLoginPin.blur(); // 失去鼠标焦点\n    } else {\n        confirm(\"\\u8F93\\u5165\\u9519\\u8BEF\\uFF0C\\u7A97\\u53E3\\u5373\\u5C06\\u5173\\u95ED\");\n        containerApp.style.opacity = 0;\n    }\n});\nconsole.log(accounts);\n// transfer\nbtnTransfer.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    console.log(\"ddd\");\n    const amount = Number(inputTransferAmount.value);\n    const receiveAcc = accounts.find((acc)=>acc.userName === inputTransferTo.value);\n    inputTransferTo.value = inputTransferAmount.value = \"\";\n    if (amount > 0 && receiveAcc && currentAccount.balance >= amount && currentAccount.userName !== receiveAcc?.userName) {\n        // doing the transfer\n        currentAccount.movements.push(-amount);\n        receiveAcc.movements.push(amount);\n        // add transfer date\n        currentAccount.movementsDates.push(new Date().toISOString());\n        receiveAcc.movementsDates.push(new Date().toISOString());\n        // updateUI\n        updateUI(currentAccount);\n        console.log(\"transfer done\");\n    }\n    console.log(receiveAcc, amount);\n});\n//btnLoan\nbtnLoan.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    const amount = Number(Math.round(inputLoanAmount.value));\n    if (amount > 0 && currentAccount.movements.some((mov)=>mov > amount * 0.1)) setTimeout(()=>{\n        currentAccount.movements.push(amount);\n        currentAccount.movementsDates.push(new Date().toISOString());\n        updateUI(currentAccount);\n        console.log(\"added\");\n    }, 3000);\n    else console.log(\"can not execute it\");\n    inputLoanAmount.value = \"\";\n});\n//btnClosed\nbtnClose.addEventListener(\"click\", function(e) {\n    e.preventDefault();\n    console.log(\"done\");\n    if (inputCloseUsername.value === currentAccount.userName && Number(inputClosePin.value) === currentAccount.pin) {\n        const index = accounts.findIndex((acc)=>acc.userName === currentAccount.userName);\n        console.log(index);\n        inputCloseUsername.value = inputClosePin.value = \"\";\n        accounts.splice(index, 1);\n        containerApp.style.opacity = \"0\";\n        labelWelcome.textContent = \"Log in to get started \";\n        console.log(\"do it\");\n    } else console.log(\"something wrong\");\n});\nconsole.log(accounts);\nconst movements = [\n    200,\n    450,\n    -400,\n    3000,\n    -650,\n    -130,\n    70,\n    1300\n];\nconst depositss = movements.filter((mov)=>mov < 0);\nconsole.log(depositss);\n// reduce\nconst init = 0;\nconst balance = movements.reduce((acc, cur, i)=>{\n    console.log(`iterator ${i}: ${acc}`);\n    return acc + cur;\n}, init);\nconsole.log(balance);\n// maximum value\nconst max = movements.reduce((acc, cur)=>{\n    if (acc < cur) return acc;\n    else return cur;\n}, movements[0]);\nconsole.log(max);\n// example\nconst calcAverageHumanAge = (ages)=>{\n    const humanAge = ages.map((age)=>age <= 2 ? 2 * age : 16 + age * 4).filter((age)=>age >= 18).reduce((acc, cur, i, arr)=>acc + cur / arr.length, 0);\n    return humanAge;\n};\nconst avg1 = calcAverageHumanAge([\n    5,\n    2,\n    4,\n    1,\n    15,\n    8,\n    3\n]);\nconst avg2 = calcAverageHumanAge([\n    16,\n    6,\n    10,\n    5,\n    6,\n    1,\n    4\n]);\nconsole.log(avg1, avg2);\n// 链式编程\nconst eurToUsd = 1.1;\n// const totalDepositsUsd = movements.filter(mov => mov > 0)\n// .map(mov => mov * eurToUsd)\n// .reduce((acc, cur) => acc + cur, 0);\nconst totalDeposit = movements.reduce((sums, cur)=>{\n    if (cur > 0) sums += cur;\n    return sums;\n}, 0);\nconsole.log(totalDeposit);\n// find\nconst findMov = movements.find((el)=>el > 100);\nconsole.log(findMov);\n//accounts\nconst account = accounts.find((acc)=>acc.owner === \"Jessica Davis\");\nconsole.log(account);\n// include //EQUALITY\nconsole.log(movements.includes(-130));\n//some  CONDITION\nconsole.log(movements.some((item, index, array)=>item > 500));\n//every\nconsole.log(movements.every((item, index, array)=>item > 500));\n// Separate CALLBACK\nconst deposits = (mov)=>mov > 0;\nconsole.log(movements.every(deposits));\nconsole.log(movements.filter(deposits));\nconsole.log(movements.some(deposits));\n//flat\nconst arrFlat = [\n    1,\n    2,\n    [\n        2,\n        5,\n        6,\n        [\n            6,\n            7,\n            8\n        ]\n    ]\n];\nconsole.log(arrFlat.flat());\nconst accountMovements = accounts.map((mov)=>mov.movements).flat();\nconsole.log(accountMovements);\nconst overBalance = accounts.map((mov)=>mov.movements).flat().reduce((acc, cur)=>acc + cur, 0);\nconsole.log(overBalance);\n//flatMap\n// flatMap() 方法首先使用映射函数映射每个元素\n// ，然后将结果压缩成一个新数组。它与 map\n// 连着深度值为 1 的 flat 几乎相同，但 flatMap 通\n// const overBalance2 = accounts.\n// flatMap(mov => mov.movements                                                                                        vements)\n// .reduce((acc, cur) => acc + cur, 0);\n// console.log(overBalance2);\nconst owners = [\n    \"Jonas\",\n    \"Zach\",\n    \"Adam\",\n    \"Martha\"\n];\nconsole.log(owners.sort());\nconsole.log(owners.reverse());\n// sort\nconst compareFn = function(a, b) {\n    if (a > b) return 1;\n    if (a < b) return -1;\n    else return 0;\n};\nmovements.sort(compareFn);\nconsole.log(movements);\nmovements.sort((a, b)=>b - a);\nconsole.log(movements);\nconsole.log([\n    1,\n    2,\n    3,\n    4,\n    5,\n    6,\n    7\n]);\nconsole.log(new Array(1, 2, 3, 4, 5));\nconst x = new Array(7);\nconsole.log(x);\nconsole.log(x.map((x)=>5));\nx.fill(5);\n// fill (fill, start, end)\nconsole.log(x);\n// from ()\n// Array.from() 方法对\n// 一个类似数组或可迭代对象创建一个新的\n// ，浅拷贝的数组实例。#ff00ff\nconst fromArr = Array.from(x);\nconsole.log(fromArr);\nconsole.log(fromArr.slice());\n// console.log(fromArr.at());\nconst assignArr = [];\nconsole.log(Object.assign(assignArr, fromArr));\nfunction func1(a, b, c) {\n    console.log(arguments[1]);\n    // Expected output: 1\n    console.log(arguments[1]);\n    // Expected output: 2\n    console.log(arguments[2]);\n// Expected output: 3\n}\n// arguments 是一个对应于传递\n// 给函数的参数的类数组对象。\nfunc1(887, 2, 3);\nfunction f() {\n    return Array.from(arguments);\n}\nconsole.log(f(1, 2, 3));\n// [ 1, 2, 3 ]\nconst y = Array.from({\n    length: 6\n}, ()=>2);\nconsole.log(y);\nconst z = Array.from({\n    length: 6\n}, (_, i)=>i + 1);\nconsole.log(z);\nconst e = Array.from({\n    length: 100\n}, ()=>Math.floor(Math.random() * 100));\nconsole.log(e);\n// labelBalance.addEventListener('click', function () {\n//   const movementsUI = Array.from(\n//     document.querySelectorAll('.movements__value'),\n//     el => Number(el.textContent.replace('€', ''))\n//   );\n//   console.log(movementsUI);\n// });\n// separate opration\nconst movementsUI2 = [\n    ...document.querySelectorAll(\".movements__row\")\n];\nconsole.log(movementsUI2);\nconst arrw = [\n    1,\n    ,\n    ,\n    ,\n    ,\n    ,\n    ,\n    4\n];\nconsole.log(arrw);\nconsole.log(arrw[2]);\nconsole.log(new Array(10).length);\nconsole.log(new Array(10));\nlabelBalance.addEventListener(\"click\", function() {\n    [\n        ...document.querySelectorAll(\".movements__row\")\n    ].forEach(function(row, i) {\n        if (i % 2 === 0) row.style.backgroundColor = \"red\";\n    });\n});\n// const user = \"Steven Thomas Williams\"; //stw\n// const userName = user.toLowerCase().split(\" \").\n// map(word => word[0]).join('');\n// console.log(userName);\n/////////////////////////////////////////////////\n/////////////////////////////////////////////////\n// LECTURES\nconst currencies = new Map([\n    [\n        \"USD\",\n        \"United States dollar\"\n    ],\n    [\n        \"EUR\",\n        \"Euro\"\n    ],\n    [\n        \"GBP\",\n        \"Pound sterling\"\n    ]\n]);\n/////////////////////////////////////////////////\n//迭代方法\n//  every()：对数组每一项都运行传入的函数，如果对每一项函数都返回 true，则这个方法返回 true。\n//  filter()：对数组每一项都运行传入的函数，函数返回 true 的项会组成数组之后返回。\n//  forEach()：对数组每一项都运行传入的函数，没有返回值。\n//  map()：对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组。\n//  some()：对数组每一项都运行传入的函数，如果有一项函数返回 true，则这个方法返回 true。\nlet number = [\n    7,\n    23,\n    4,\n    5,\n    52,\n    25,\n    5\n];\nlet everyResult = number.every((item, index, array)=>item > 2);\nconsole.log(everyResult);\nconst result = number.map(function(x) {\n    return x * 3;\n});\nconsole.log(result);\nconst red = [\n    2,\n    4,\n    5\n];\nconst sum = red.reduce((acc, curr, element, index)=>acc + curr);\nconsole.log(sum);\n// map\n// like use arrow function #ff087b\nconst mapResult = movements.map((x)=>x * 1.1);\nconsole.log(movements);\nconsole.log(mapResult);\nconst movementsDescription = movements.map((mov, i)=>`movement ${i + 1}: You ${mov > 0 ? \"deposit\" : \"withdrawal\"} ${Math.abs(mov)}`);\nconsole.log(movementsDescription);\n// array method practice\nconst bankDepositSum = accounts.flatMap((acc)=>acc.movements).filter((acc)=>acc > 0).reduce((acc, cur)=>acc + cur, 0);\nconsole.log(bankDepositSum);\nconst numDeposit1000 = accounts.flatMap((acc)=>acc.movements).reduce((count, cur)=>cur >= 1000 ? ++count : count, 0);\nconsole.log(numDeposit1000);\n// 3)\n// const sums = accounts.flatMap(acc => acc.movements)\n// .reduce((sum, cur) => {\n//   cur > 0 ? (sum.deposit += cur) : (sum.withdrawal += cur)\n// }, {deposit: 0, withdrawal: 0});\n// console.log(sums);\n// 2\nconst { deposit, withdrawal } = accounts.flatMap((acc)=>acc.movements).reduce((sum, cur)=>{\n    // if (cur > 0) sum.deposit += cur;\n    // else sum.withdrawal += cur;\n    sum[cur > 0 ? \"deposit\" : \"withdrawal\"] += cur;\n    return sum;\n}, {\n    deposit: 0,\n    withdrawal: 0\n});\nconsole.log(deposit, withdrawal);\nconst convertTitleCase = function(title) {\n    const capitalize = (str)=>str[0].toUpperCase() + str.slice(1);\n    const exceptions = [\n        \"a\",\n        \"an\",\n        \"the\",\n        \"but\",\n        \"and\",\n        \"or\",\n        \"on\",\n        \"in\",\n        \"with\"\n    ];\n    const titleCase = title.toLowerCase().split(\" \").map((word)=>exceptions.includes(word) ? word : capitalize(word)).join(\" \");\n    return capitalize(titleCase);\n};\nconsole.log(convertTitleCase(\"this is a nice title\"));\nconsole.log(convertTitleCase(\"this is a LONG title but not too long\"));\nconsole.log(convertTitleCase(\"and here is another title with an EXAMPLE\"));\n// code challenge\nconst dogs = [\n    {\n        weight: 22,\n        curFood: 250,\n        owners: [\n            \"Alice\",\n            \"Bob\"\n        ]\n    },\n    {\n        weight: 8,\n        curFood: 200,\n        owners: [\n            \"Matilda\"\n        ]\n    },\n    {\n        weight: 13,\n        curFood: 275,\n        owners: [\n            \"Sarah\",\n            \"John\"\n        ]\n    },\n    {\n        weight: 32,\n        curFood: 340,\n        owners: [\n            \"Michael\"\n        ]\n    }\n];\n// GOOD LUCK\ndogs.forEach((dog)=>dog.recFood = Math.floor(dog.weight ** 0.75 * 28));\nconsole.log(dogs[2].owners);\nconsole.log(dogs);\nconst dogSarah = dogs.find((dog)=>dog.owners.includes(\"Sarah\"));\nconsole.log(dogSarah);\nconsole.log(`Sarah's dog is eating too ${dogSarah.curFood > dogSarah.recFood ? \"much\" : \"little\"}`);\nconst ownersEatTooMuch = dogs.filter((dog)=>dog.curFood > dog.recFood).flatMap((dog)=>dog.owners);\nconst ownersEatTooLittle = dogs.filter((dog)=>dog.curFood < dog.recFood).flatMap((dog)=>dog.owners);\nconsole.log(ownersEatTooLittle);\nconsole.log(ownersEatTooMuch);\nconsole.log(`${ownersEatTooMuch.join(\" and \")}'s dogs eat too much`);\nconsole.log(`${ownersEatTooLittle.join(\" and \")}'s dogs eat too little`);\nconsole.log(dogs.some((dog)=>dog.curFood === dog.recFood));\n// call back\nconst checkEatingOkay = (dog)=>dog.curFood > dog.recFood * 0.9 && dog.curFood < dog.recFood * 1.1;\nconsole.log(dogs.some(checkEatingOkay));\nconsole.log(dogs.filter(checkEatingOkay));\nconst dogSorted = dogs.slice().sort((a, b)=>a.curFood - b.curFood);\nconsole.log(dogSorted);\n// Boolean 是对应布尔值的引用类型\nlet booleanObject = new Boolean(true);\nconsole.log(typeof booleanObject);\nconsole.log(booleanObject);\nlet falseObject = new Boolean(false);\nlet resultBool = falseObject && true;\nconsole.log(resultBool);\nlet falseValue = false;\nresultBool = falseValue && false;\nconsole.log(resultBool);\n// instanceof\n// Number\n// 与 Boolean 类型一样，Number 类型重写了 valueOf()、toLocaleString()和 toString()方\n// 法。\nconsole.log(true);\nlet numberObject = new Number(10);\nconsole.log(numberObject);\nconst resultNum = 0.1 + 0.2;\nconsole.log(resultNum);\n// let num = 10;\n// console.log(num.toString()); // \"10\"\n// console.log(num.toString(2)); // \"1010\"\n// console.log(num.toString(8)); // \"12\"\n// console.log(num.toString(10)); // \"10\"\n// console.log(num.toString(16)); // \"a\"\nlet num = 10;\nconsole.log(typeof num.valueOf());\nconsole.log(num.toString(2));\nconsole.log(num.toString(8));\nconsole.log(num.toString(16));\nconsole.log(Number.parseInt(\"e23\"));\nconsole.log(Number.parseInt(\"30rem\"));\n// toFixed()方法返回包含指定小数点位数的数值字符串，\nnum = 10.0065;\nconsole.log(num.toFixed(3));\nconsole.log(0.2 + 0.1);\n// 是 toExponential()\nconsole.log(num.toExponential(10));\nlet numberValue = 10;\nconsole.log(typeof numberValue);\nconsole.log(typeof numberObject);\nconsole.log(numberValue instanceof Number);\nconsole.log(numberObject instanceof Number);\nconsole.log(Number.isInteger(numberValue));\nconsole.log(Number.isSafeInteger(2008974234234234));\nconsole.log(Number.parseInt(\"0XFF\", 16));\nconsole.log(Number.parseInt(\"0101010111F\", 2));\n// check is value is NaN\nconsole.log(Number.isNaN(NaN));\nconsole.log(Number.isNaN(\"werwe\"));\nconsole.log(Number.isNaN(NaN));\nconsole.log(Number.isNaN(0 / 0));\n// checking is value is number\n// Number.isFinite() 方法用来检测传入的参数是否是一个有穷数。\nconsole.log(Number.isFinite(232));\nconsole.log(Number.isFinite(\"323\"));\nconsole.log(Math.PI);\nconsole.log(Math.ceil(23.2));\nconsole.log(Math.floor(34.2));\nconsole.log(Math.round(34.6));\nconsole.log(Math.fround(34.2));\nconsole.log(Math.E);\nconsole.log(Math.LN10);\nconsole.log(Math.LN2);\nconsole.log(Math.floor(-45.8));\nconsole.log(Math.trunc(-45.3));\nconsole.log(Math.floor(\"45.3\"));\n// rounding decimal\n// tofixed 会转换成string类型\nconsole.log(2.7.toFixed(2));\nconsole.log(typeof 2.7.toFixed(3));\nconsole.log(typeof +2.4.toFixed(0));\n// RANDOM\nconst selectFrom = function(lowerValue, upperValue) {\n    let choice = upperValue - lowerValue + 1;\n    return Math.floor(Math.random() * choice + lowerValue);\n};\nconsole.log(selectFrom(2, 10));\nconsole.log(Math.max(12, 43, \"434\"));\nconsole.log(Math.min(12, 43, \"434\"));\nconsole.log(Math.PI * Number.parseFloat(\"10px\") ** 2);\nconst randInt = (min, max)=>Math.floor(Math.random() * (max - min + 1) + min);\nconsole.log(randInt(0, 10));\nconsole.log(randInt(2, 23));\n/*\r\n// numeric sepaarators \r\n\r\nlet diameter = 28_634_553_332_200;\r\nconsole.log(diameter);\r\nconsole.log(Number('23_300'));\r\n// console.log(434244444444444444444444444444);\r\nconst theBiggestInt = 9007199254740991n;\r\nconsole.log(typeof theBiggestInt);\r\n\r\n\r\nconst alsoHuge = BigInt(9007199254740991);\r\n// ↪ 9007199254740991n\r\n\r\nconst hugeString = BigInt(\"9007199254740991\");\r\n// ↪ 9007199254740991n\r\n\r\nconst hugeHex = BigInt(\"0x1fffffffffffff\");\r\n// ↪ 9007199254740991n\r\nconsole.log(hugeHex);\r\n\r\n\r\nconst hugeBin = BigInt(\"0b11111111111111111111111111111111111111111111111111111\");\r\n// ↪ 9007199254740991n\r\nconsole.log(hugeBin);\r\n\r\n// Operation \r\n\r\nconsole.log(2n > 1);\r\nconsole.log(hugeBin * hugeHex);\r\n\r\nif (hugeBin) console.log(alsoHuge, 'nih');\r\nconsole.log(20n == 20);\r\nconsole.log(20n === 20);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// bigInt \r\n\r\nconsole.log(2 ** 100 - 1 );\r\nconsole.log(Number.MIN_SAFE_INTEGER);\r\nconsole.log(Number.MAX_SAFE_INTEGER);\r\n\r\n*/ /*\r\n// DATE\r\nlet date = new Date('May 29, 2022  ');\r\nconsole.log(date);\r\nconsole.log(Date.now());\r\nconsole.log(Date.parse('Tue Jun 06 2000 23:43:50'));\r\n\r\nlet y2k = new Date(Date.UTC(2023, 3));\r\nconsole.log(new Date('Tue Jun 06 2000 23:43:50'));\r\n\r\nconsole.log(y2k);\r\nlet allFive = new Date(Date.UTC(2000, 8, 6, 15, 43, 50));\r\nconsole.log(allFive);\r\nconsole.log(allFive.getTime()); // 相互转换\r\nconsole.log(new Date(1678264040263));\r\n\r\nconsole.log(allFive.getDate());\r\nconsole.log(allFive.getDay()); //获得星期几\r\nconsole.log(allFive.getFullYear());\r\nconsole.log(allFive.getMonth());\r\nconsole.log(allFive.getHours());\r\nconsole.log(allFive.getMinutes());\r\nconsole.log(allFive.getSeconds());\r\nconsole.log(allFive.toISOString());\r\n\r\nconsole.log(new Date());\r\nconsole.log(new Date(0));\r\nconsole.log(Date.length);\r\n\r\nconsole.log(new Date(3 * 60 * 60 * 60 * 10000));\r\n\r\nconst calcDatePassed = (date1, date2) =>\r\n  Math.abs(date2 - date1) / (1000 * 60 * 60 * 24);\r\n\r\nconst day1 = calcDatePassed(new Date(2023, 3, 8), new Date(2023, 3, 18));\r\nconsole.log(`相差：${day1}天！`);\r\n\r\nconst optional = {\r\n  style: 'currency',   //currency, percent\r\n  // unit: 'mile-per-hour'\r\n  currency: 'RMB'\r\n}\r\nconst  numOfDate = 432432.2423234;\r\nconsole.log( 'US:', new Intl.NumberFormat('tt-RU', optional).format(numOfDate));\r\nconsole.log( 'US:',new Intl.NumberFormat('zh-CN', optional).format(numOfDate));\r\nconsole.log( 'US:',new Intl.NumberFormat('ar-SY', optional).format(numOfDate));\r\n\r\n\r\n*/ // setTimeout \nconst boardPassenagers = function(n, wait) {\n    const perGroup = n / 3;\n    setTimeout(function() {\n        console.log(`We are now boarding all ${n} passengers`);\n        console.log(`There are 3 groups, each with ${perGroup} passengers`);\n    }, wait * 1000);\n    console.log(`Will start boarding in ${wait} seconds`);\n};\nboardPassenagers(27, 4);\nconst argumentsFun = function() {\n    console.log(`hello: ${arguments[0]}, ${arguments[1]}`);\n};\nargumentsFun(12, \"hello\");\nconst ingredients = [\n    \"olives\",\n    \"spinach\",\n    \"numeric\"\n];\nconst pizzaTimer = setTimeout((ing, ing2, ing3)=>console.log(`Here is your pizza \\u{1F922} with ${ing}, and ${ing2}, and ${ing3}`), 4000, ...ingredients);\nconsole.log(\"waiting .....\");\nif (ingredients.includes(\"spinacha\")) clearTimeout(pizzaTimer);\n//setInterval\nsetInterval(()=>{\n    const date = new Intl.DateTimeFormat(\"zh-CN\", {\n        hour: \"numeric\",\n        minute: \"numeric\",\n        second: \"numeric\"\n    }).format(new Date());\n// console.log(date);\n}, 2000);\n//regexp\nconst start = Date.now();\nlet text = \"mom and dad and baby\";\nlet pattern = /mom(and dad(and baby)?)?/gi;\nlet matches = pattern.exec(text);\nconsole.log(matches.index);\nconsole.log(matches.input);\nconst stop = Date.now();\nconsole.log(stop - start); // 继承的方法\n /*\r\n\r\n\r\nconsole.log(8 % 3);\r\n\r\nconst isEven = (n) => n % 2 === 0;\r\nconsole.log(isEven(4243));\r\n\r\nlabelBalance.addEventListener('click', function () {\r\n\r\n  [...document.querySelectorAll('.movements_row')].forEach((el, i) => {\r\n    if (i % 2 === 0) {\r\n      el.style.backgroundColor = '#ff4367';\r\n    }\r\n  })\r\n})\r\nconst dom = document.querySelectorAll('movements__row');\r\nconsole.log(dom);\r\n\r\n*/ \n\n//# sourceMappingURL=index.0f020267.js.map\n","'use strict';\r\n\r\n\r\n\r\n/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////\r\n// BANKIST APP\r\n\r\n// Data\r\nconst account1 = {\r\n  owner: 'Jonas Schmedtmann',\r\n  movements: [200, 450, -400, 3000, -650, -130, 70, 1300],\r\n  interestRate: 1.2, // %\r\n  pin: 1111,\r\n  movementsDates: [\r\n    '2019-11-18T21:31:17.178Z',\r\n    '2019-12-23T07:42:02.383Z',\r\n    '2020-01-28T09:15:04.904Z',\r\n    '2020-04-01T10:17:24.185Z',\r\n    '2020-05-08T14:11:59.604Z',\r\n    '2020-05-27T17:01:17.194Z',\r\n    '2023-03-07T10:32:34.600Z',\r\n    '2023-03-08T10:32:34.600Z',\r\n  ],\r\n  currency: 'EUR',\r\n  locale: 'pt-PT', // de-DE\r\n};\r\n\r\nconst account2 = {\r\n  owner: 'Jessica Davis',\r\n  movements: [5000, 3400, -150, -790, -3210, -1000, 8500, -30],\r\n  interestRate: 1.5,\r\n  pin: 2222,\r\n  movementsDates: [\r\n    '2019-11-01T13:15:33.035Z',\r\n    '2019-11-30T09:48:16.867Z',\r\n    '2019-12-25T06:04:23.907Z',\r\n    '2020-01-25T14:18:46.235Z',\r\n    '2020-02-05T16:33:06.386Z',\r\n    '2020-04-10T14:43:26.374Z',\r\n    '2020-06-25T18:49:59.371Z',\r\n    '2020-07-26T12:01:20.894Z',\r\n  ],\r\n  currency: 'USD',\r\n  locale: 'en-US',\r\n};\r\n\r\nconst account3 = {\r\n  owner: 'Steven Thomas Williams',\r\n  movements: [200, -200, 340, -300, -20, 50, 400, -460],\r\n  interestRate: 0.7,\r\n  pin: 3333,\r\n  movementsDates: [\r\n    '2019-11-01T13:15:33.035Z',\r\n    '2019-11-30T09:48:16.867Z',\r\n    '2019-12-25T06:04:23.907Z',\r\n    '2020-01-25T14:18:46.235Z',\r\n    '2020-02-05T16:33:06.386Z',\r\n    '2020-04-10T14:43:26.374Z',\r\n    '2020-06-25T18:49:59.371Z',\r\n    '2020-07-26T12:01:20.894Z',\r\n  ],\r\n  currency: 'OMR',\r\n  locale: 'ar-OM',\r\n};\r\nconsole.log(account3['movements']);\r\n\r\nconst account4 = {\r\n  owner: 'Sarah Smith',\r\n  movements: [430, 1000, 700, 50, 90],\r\n  interestRate: 1,\r\n  pin: 4444,\r\n  movementsDates: [\r\n    '2019-11-01T13:15:33.035Z',\r\n    '2019-11-30T09:48:16.867Z',\r\n    '2019-12-25T06:04:23.907Z',\r\n    '2020-01-25T14:18:46.235Z',\r\n    '2020-02-05T16:33:06.386Z',\r\n    '2020-04-10T14:43:26.374Z',\r\n    '2020-06-25T18:49:59.371Z',\r\n    '2020-07-26T12:01:20.894Z',\r\n  ],\r\n  currency: 'DKK',\r\n  locale: 'da-DK',\r\n};\r\nconst account5 = {\r\n  owner: 'jack Deng keng',\r\n  movements: [1000, 2000, 5000, 900000, -100000, 442423],\r\n  interestRate: 2.3,\r\n  pin: 5555,\r\n  movementsDates: [\r\n    '2019-11-01T13:15:33.035Z',\r\n    '2019-11-30T09:48:16.867Z',\r\n    '2019-12-25T06:04:23.907Z',\r\n    '2020-01-25T14:18:46.235Z',\r\n    '2020-02-05T16:33:06.386Z',\r\n    '2020-04-10T14:43:26.374Z',\r\n   \r\n  ],\r\n  currency: 'CNY',\r\n  locale: 'zh-CN',\r\n\r\n};\r\n\r\nconst accounts = [account1, account2, account3, account4, account5];\r\n\r\n// Elements\r\nconst labelWelcome = document.querySelector('.welcome');\r\nconst labelDate = document.querySelector('.date');\r\nconst labelBalance = document.querySelector('.balance__value');\r\nconst labelSumIn = document.querySelector('.summary__value--in');\r\nconst labelSumOut = document.querySelector('.summary__value--out');\r\nconst labelSumInterest = document.querySelector('.summary__value--interest');\r\nconst labelTimer = document.querySelector('.timer');\r\n\r\nconst containerApp = document.querySelector('.app');\r\nconst containerMovements = document.querySelector('.movements');\r\n\r\nconst btnLogin = document.querySelector('.login__btn');\r\nconst btnTransfer = document.querySelector('.form__btn--transfer');\r\nconst btnLoan = document.querySelector('.form__btn--loan');\r\nconst btnClose = document.querySelector('.form__btn--close');\r\nconst btnSort = document.querySelector('.btn--sort');\r\n\r\nconst inputLoginUsername = document.querySelector('.login__input--user');\r\nconst inputLoginPin = document.querySelector('.login__input--pin');\r\nconst inputTransferTo = document.querySelector('.form__input--to');\r\nconst inputTransferAmount = document.querySelector('.form__input--amount');\r\nconst inputLoanAmount = document.querySelector('.form__input--loan-amount');\r\nconst inputCloseUsername = document.querySelector('.form__input--user');\r\nconst inputClosePin = document.querySelector('.form__input--pin');\r\nconst modal = document.querySelector('.modal');\r\n// modal.style.display = 'block';\r\nconst overlay = document.querySelector('.overlay');\r\nconst btnCloseModal = document.querySelector('.close-modal');\r\nconst btnShowModal = document.querySelectorAll('.show-modal');\r\n\r\n\r\n\r\n//Modal\r\nconst closeModal = function () {\r\n  modal.classList.add('hidden')\r\n  overlay.classList.add('hidden');\r\n};\r\n\r\nwindow.onload = function () {\r\n  modal.classList.remove('hidden');\r\n  overlay.classList.remove('hidden');\r\n\r\n}\r\noverlay.addEventListener('click', closeModal);\r\nbtnCloseModal.addEventListener('click', closeModal);\r\ndocument.addEventListener('keydown', function (e) {\r\n  console.log(e.key);\r\n  if (e.key === 'Escape' && !modal.classList.contains('hidden')) closeModal();\r\n\r\n})\r\n// btnCloseModal.addEventListener('click', closeModal);\r\n\r\n\r\n// function\r\n\r\nconst options = {\r\n  year: 'numeric',\r\n  month: 'numeric',\r\n  day: 'numeric',\r\n}\r\nconst formatMovements = function (date, locale) {\r\n  const calcDatePassed = (date1, date2) =>\r\n  Math.round(Math.abs(date2 - date1) / (1000 * 60 * 60 * 24));\r\n  const daysPassed = calcDatePassed(new Date(), date);\r\n  console.log(daysPassed);\r\n  if (daysPassed === 0) return 'Today';\r\n  else if (daysPassed === 1) return 'Yesterday';\r\n  else if (daysPassed <= 7) return `${daysPassed} days ago`;\r\n//  return `${day}/${month}/${year}`;\r\n  return new Intl.DateTimeFormat(locale).format(date);\r\n};\r\n\r\n// FORMATcurrency\r\n\r\nconst formatCur = function (value, locale, currency) {\r\n  return new Intl.NumberFormat(locale, {\r\n    style: 'currency',\r\n    currency: currency\r\n  } ).format(value);\r\n}\r\nconst updateUI = function (acc) {\r\n  displayMovements(acc);\r\n  calcDisplayBalance(acc);\r\n  calcDisplaySummary(acc);\r\n};\r\n\r\nconst startLogoutTimer = function () {\r\nconst trick = function () {\r\n  // set time to 5 minute\r\n\r\n    const min = String(Math.floor(time / 60)).padStart(2, '0');\r\n    const sec = String(time % 60).padStart(2, '0');\r\n    labelTimer.textContent = `${min}:${sec}`;\r\n  //When 0 seconds, stop timer and logg out user\r\n    if (time === 0) {\r\n      clearInterval(timer);\r\n      labelWelcome.textContent = 'Log in to get started';\r\n      containerApp.style.opacity = '0';\r\n\r\n    }\r\n    time--;\r\n};\r\n// set time to 5 minute\r\n  let time = 300;\r\n\r\n    // call the timer every second\r\ntrick();\r\n  const timer = setInterval(trick,1000)\r\n\r\n\r\nreturn timer;\r\n  // In each call, print the remaining time to UI\r\n\r\n\r\n\r\n}\r\n\r\n\r\n// arrow function\r\nconst displayMovements = (acc, sort = false) => {\r\n  const movs = sort\r\n    ? acc.movements.slice().sort((a, b) => a - b)\r\n    : acc.movements;\r\n\r\n  containerMovements.innerHTML = ''; //将内部文字清空;\r\n  movs.forEach((mov, i) => {\r\n    const type = mov > 0 ? 'deposit' : 'withdrawal';\r\n    const date = new Date(acc.movementsDates[i]);\r\n\r\n    const displayDate = formatMovements(date, acc.locale);\r\n    const displayMov = formatCur(mov, acc.locale, acc.currency);\r\n\r\n    const html = `\r\n    <div class=\"movements__row\">\r\n    <div class=\"movements__type movements__type--${type}\">${i + 1} ${type}</div>\r\n    <div class=\"movements__date\">${displayDate}</div>\r\n    <div class=\"movements__value\">${displayMov}</div>\r\n  </div>\r\n    `;\r\n    containerMovements.insertAdjacentHTML('afterbegin', html);\r\n  });\r\n};\r\n// displayMovements(account1.movements);\r\n// console.log(containerMovements.innerHTML);\r\n\r\nconst createUser = accs => {\r\n  accs.forEach(acc => {\r\n    acc.userName = acc.owner\r\n      .toLowerCase()\r\n      .split(' ')\r\n      .map(word => word[0])\r\n      .join('');\r\n  });\r\n};\r\ncreateUser(accounts);\r\nconsole.log(accounts);\r\n\r\nconst calcDisplaySummary = acc => {\r\n  const income = acc.movements\r\n    .filter(mov => mov > 0)\r\n    .reduce((acc, cur) => acc + cur, 0);\r\n  labelSumIn.textContent = formatCur(income, acc.locale, acc.currency );\r\n  const outCome = acc.movements\r\n    .filter(mov => mov < 0)\r\n    .reduce((acc, cur) => acc + cur, 0);\r\n  labelSumOut.textContent =formatCur(Math.abs(outCome), acc.locale, acc.currency );\r\n  const interest = acc.movements\r\n    .filter(mov => mov > 0)\r\n    .map(mov => (mov * acc.interestRate) / 100)\r\n    .reduce((acc, cur) => acc + cur, 0);\r\n  labelSumInterest.textContent = formatCur(interest, acc.locale, acc.currency );\r\n};\r\n// calcDisplaySummary(account2.movements);\r\nconst calcDisplayBalance = acc => {\r\n  acc.balance = acc.movements.reduce((acc, cur) => acc + cur, 0);\r\n  labelBalance.textContent = formatCur(acc.balance, acc.locale, acc.currency );\r\n};\r\n// calcDisplayBalance(account2.movements);\r\n\r\n// event listener\r\n\r\nlet currentAccount, timer;\r\n\r\n// currentAccount = account1;\r\n// updateUI(currentAccount);\r\n// containerApp.style.opacity = 100;\r\n\r\n\r\n// Experimenting API \r\n// const locale = navigator.language;\r\n// console.log(locale);\r\n\r\n// const dates = new Date();\r\n// const options = {\r\n//   // weekday: 'long',\r\n//   year: 'numeric',\r\n//   month: 'numeric',\r\n//   day: 'numeric',\r\n//   hour: '2-digit',\r\n//   minute: 'numeric',\r\n//   // second: 'numeric',\r\n//   // hour12: true,\r\n//   // timeZone: 'Asia/Shanghai'\r\n\r\n// }\r\n// labelDate.textContent = new Intl.DateTimeFormat(currentAccount.locale, options).format(dates);\r\n\r\n\r\n\r\nlet sorted = false;\r\nbtnSort.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  displayMovements(currentAccount, !sorted);\r\n  sorted = !sorted;\r\n});\r\n\r\nbtnLogin.addEventListener('click', e => {\r\n  e.preventDefault();\r\n  console.log('Logined');\r\n  currentAccount = accounts.find(\r\n    acc => acc.userName === inputLoginUsername.value\r\n  );\r\n  console.log(currentAccount);\r\n\r\n  // ?. option operation\r\n  if (currentAccount?.pin === Number(inputLoginPin.value)) {\r\n    // display UI  and message\r\n    labelWelcome.textContent = `Welcome back, ${\r\n      currentAccount.owner.split(' ')[0]\r\n    }`;\r\n    containerApp.style.opacity = 100;\r\n\r\n// Create current date and time \r\n// const now = new Date();\r\n// const day = `${now.getDate()}`.padStart(2, 0);\r\n// const month = `${now.getMonth() + 1}`.padStart(2, 0);\r\n// const year = now.getFullYear();\r\n// const min = now.getMinutes();\r\n// const hours = now.getHours();\r\n// const sec = now.getSeconds();\r\n// labelDate.textContent = `${day}/${month}/${year},${hours}:${min}`;\r\n\r\n    // display movements and summary balance\r\n\r\n    const  date = new Date();\r\n    const options = {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n      hour: 'numeric',\r\n      minute: 'numeric',\r\n      weekday: 'long'\r\n    }\r\n    labelDate.textContent = new Intl.DateTimeFormat(currentAccount.locale, options).format(date);\r\n    //Timer\r\nif (timer) clearInterval(timer)\r\n    timer = startLogoutTimer();\r\n    // clear inputLogin\r\n    inputLoginUsername.value = inputLoginPin.value = '';\r\n    inputCloseUsername.value = inputClosePin.value = '';\r\n    updateUI(currentAccount);\r\n    // const inputLoginUsenameAtt = inputLoginUsername.getAttribute('class');\r\n    // console.log(inputLoginUsenameAtt);\r\n\r\n    inputLoginPin.blur(); // 失去鼠标焦点\r\n  } else {\r\n    confirm('输入错误，窗口即将关闭');\r\n    containerApp.style.opacity = 0;\r\n  }\r\n});\r\nconsole.log(accounts);\r\n// transfer\r\n\r\nbtnTransfer.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  console.log('ddd');\r\n  const amount = Number(inputTransferAmount.value);\r\n  const receiveAcc = accounts.find(\r\n    acc => acc.userName === inputTransferTo.value\r\n  );\r\n  inputTransferTo.value = inputTransferAmount.value = '';\r\n\r\n  if (\r\n    amount > 0 &&\r\n    receiveAcc &&\r\n    currentAccount.balance >= amount &&\r\n    currentAccount.userName !== receiveAcc?.userName\r\n  ) {\r\n\r\n      // doing the transfer\r\n      currentAccount.movements.push(-amount);\r\n      receiveAcc.movements.push(amount);\r\n  \r\n      // add transfer date\r\n      currentAccount.movementsDates.push(new Date().toISOString());\r\n      receiveAcc.movementsDates.push(new Date().toISOString());\r\n      // updateUI\r\n      updateUI(currentAccount);\r\n      console.log('transfer done');\r\n      \r\n      \r\n\r\n  }\r\n  console.log(receiveAcc, amount);\r\n});\r\n\r\n//btnLoan\r\nbtnLoan.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  const amount = Number(Math.round(inputLoanAmount.value));\r\n  if (amount > 0 && currentAccount.movements.some(mov => mov > amount * 0.1)) {\r\nsetTimeout(() => {\r\n  currentAccount.movements.push(amount);\r\n  currentAccount.movementsDates.push(new Date().toISOString());\r\n  updateUI(currentAccount);\r\n  console.log('added');\r\n  \r\n}, 3000);\r\n\r\n  } else console.log('can not execute it');\r\n  inputLoanAmount.value = '';\r\n});\r\n//btnClosed\r\n\r\nbtnClose.addEventListener('click', function (e) {\r\n  e.preventDefault();\r\n  console.log('done');\r\n\r\n  if (\r\n    inputCloseUsername.value === currentAccount.userName &&\r\n    Number(inputClosePin.value) === currentAccount.pin\r\n  ) {\r\n    const index = accounts.findIndex(\r\n      acc => acc.userName === currentAccount.userName\r\n    );\r\n    console.log(index);\r\n    inputCloseUsername.value = inputClosePin.value = '';\r\n\r\n\r\n    accounts.splice(index, 1);\r\n    containerApp.style.opacity = '0';\r\n    labelWelcome.textContent = 'Log in to get started '\r\n\r\n    console.log('do it');\r\n  } else {\r\n    console.log('something wrong');\r\n  }\r\n});\r\n\r\n\r\n\r\n\r\nconsole.log(accounts);\r\nconst movements = [200, 450, -400, 3000, -650, -130, 70, 1300];\r\n\r\nconst depositss = movements.filter(mov => mov < 0);\r\nconsole.log(depositss);\r\n\r\n// reduce\r\nconst init = 0;\r\nconst balance = movements.reduce((acc, cur, i) => {\r\n  console.log(`iterator ${i}: ${acc}`);\r\n  return acc + cur;\r\n}, init);\r\n\r\nconsole.log(balance);\r\n\r\n// maximum value\r\nconst max = movements.reduce((acc, cur) => {\r\n  if (acc < cur) return acc;\r\n  else return cur;\r\n}, movements[0]);\r\nconsole.log(max);\r\n\r\n// example\r\n\r\nconst calcAverageHumanAge = ages => {\r\n  const humanAge = ages\r\n    .map(age => (age <= 2 ? 2 * age : 16 + age * 4))\r\n    .filter(age => age >= 18)\r\n    .reduce((acc, cur, i, arr) => acc + cur / arr.length, 0);\r\n  return humanAge;\r\n};\r\nconst avg1 = calcAverageHumanAge([5, 2, 4, 1, 15, 8, 3]);\r\nconst avg2 = calcAverageHumanAge([16, 6, 10, 5, 6, 1, 4]);\r\nconsole.log(avg1, avg2);\r\n\r\n// 链式编程\r\nconst eurToUsd = 1.1;\r\n// const totalDepositsUsd = movements.filter(mov => mov > 0)\r\n// .map(mov => mov * eurToUsd)\r\n// .reduce((acc, cur) => acc + cur, 0);\r\nconst totalDeposit = movements.reduce((sums, cur) => {\r\n  if (cur > 0) sums += cur;\r\n  return sums;\r\n}, 0);\r\nconsole.log(totalDeposit);\r\n\r\n// find\r\nconst findMov = movements.find(el => el > 100);\r\nconsole.log(findMov);\r\n\r\n//accounts\r\nconst account = accounts.find(acc => acc.owner === 'Jessica Davis');\r\nconsole.log(account);\r\n\r\n// include //EQUALITY\r\nconsole.log(movements.includes(-130));\r\n\r\n//some  CONDITION\r\nconsole.log(movements.some((item, index, array) => item > 500));\r\n//every\r\nconsole.log(movements.every((item, index, array) => item > 500));\r\n\r\n// Separate CALLBACK\r\nconst deposits = mov => mov > 0;\r\n\r\nconsole.log(movements.every(deposits));\r\nconsole.log(movements.filter(deposits));\r\nconsole.log(movements.some(deposits));\r\n\r\n//flat\r\nconst arrFlat = [1, 2, [2, 5, 6, [6, 7, 8]]];\r\nconsole.log(arrFlat.flat());\r\n\r\nconst accountMovements = accounts.map(mov => mov.movements).flat();\r\nconsole.log(accountMovements);\r\nconst overBalance = accounts\r\n  .map(mov => mov.movements)\r\n  .flat()\r\n  .reduce((acc, cur) => acc + cur, 0);\r\nconsole.log(overBalance);\r\n\r\n//flatMap\r\n// flatMap() 方法首先使用映射函数映射每个元素\r\n// ，然后将结果压缩成一个新数组。它与 map\r\n// 连着深度值为 1 的 flat 几乎相同，但 flatMap 通\r\n\r\n// const overBalance2 = accounts.\r\n// flatMap(mov => mov.movements                                                                                        vements)\r\n// .reduce((acc, cur) => acc + cur, 0);\r\n// console.log(overBalance2);\r\n\r\nconst owners = ['Jonas', 'Zach', 'Adam', 'Martha'];\r\nconsole.log(owners.sort());\r\nconsole.log(owners.reverse());\r\n\r\n// sort\r\nconst compareFn = function (a, b) {\r\n  if (a > b) return 1;\r\n  if (a < b) return -1;\r\n  else return 0;\r\n};\r\nmovements.sort(compareFn);\r\nconsole.log(movements);\r\n\r\nmovements.sort((a, b) => b - a);\r\nconsole.log(movements);\r\n\r\nconsole.log([1, 2, 3, 4, 5, 6, 7]);\r\nconsole.log(new Array(1, 2, 3, 4, 5));\r\nconst x = new Array(7);\r\nconsole.log(x);\r\nconsole.log(x.map(x => 5));\r\nx.fill(5);\r\n// fill (fill, start, end)\r\nconsole.log(x);\r\n\r\n// from ()\r\n// Array.from() 方法对\r\n// 一个类似数组或可迭代对象创建一个新的\r\n// ，浅拷贝的数组实例。#ff00ff\r\nconst fromArr = Array.from(x);\r\nconsole.log(fromArr);\r\nconsole.log(fromArr.slice());\r\n// console.log(fromArr.at());\r\nconst assignArr = [];\r\nconsole.log(Object.assign(assignArr, fromArr));\r\nfunction func1(a, b, c) {\r\n  console.log(arguments[1]);\r\n  // Expected output: 1\r\n\r\n  console.log(arguments[1]);\r\n  // Expected output: 2\r\n\r\n  console.log(arguments[2]);\r\n  // Expected output: 3\r\n}\r\n// arguments 是一个对应于传递\r\n// 给函数的参数的类数组对象。\r\nfunc1(887, 2, 3);\r\n\r\nfunction f() {\r\n  return Array.from(arguments);\r\n}\r\n\r\nconsole.log(f(1, 2, 3));\r\n\r\n// [ 1, 2, 3 ]\r\n\r\nconst y = Array.from({ length: 6 }, () => 2);\r\nconsole.log(y);\r\nconst z = Array.from({ length: 6 }, (_, i) => i + 1);\r\nconsole.log(z);\r\nconst e = Array.from({ length: 100 }, () => Math.floor(Math.random() * 100));\r\nconsole.log(e);\r\n\r\n// labelBalance.addEventListener('click', function () {\r\n//   const movementsUI = Array.from(\r\n//     document.querySelectorAll('.movements__value'),\r\n//     el => Number(el.textContent.replace('€', ''))\r\n//   );\r\n//   console.log(movementsUI);\r\n// });\r\n// separate opration\r\nconst movementsUI2 = [...document.querySelectorAll('.movements__row')];\r\nconsole.log(movementsUI2);\r\n\r\nconst arrw = [1, , , , , , , 4];\r\nconsole.log(arrw);\r\nconsole.log(arrw[2]);\r\nconsole.log(new Array(10).length);\r\nconsole.log(new Array(10));\r\n\r\nlabelBalance.addEventListener('click', function () {\r\n  [...document.querySelectorAll('.movements__row')].forEach(function (row, i) {\r\n    if (i % 2 === 0) row.style.backgroundColor = 'red';\r\n  });\r\n});\r\n\r\n// const user = \"Steven Thomas Williams\"; //stw\r\n// const userName = user.toLowerCase().split(\" \").\r\n// map(word => word[0]).join('');\r\n\r\n// console.log(userName);\r\n\r\n/////////////////////////////////////////////////\r\n/////////////////////////////////////////////////\r\n// LECTURES\r\n\r\nconst currencies = new Map([\r\n  ['USD', 'United States dollar'],\r\n  ['EUR', 'Euro'],\r\n  ['GBP', 'Pound sterling'],\r\n]);\r\n\r\n/////////////////////////////////////////////////\r\n\r\n//迭代方法\r\n//  every()：对数组每一项都运行传入的函数，如果对每一项函数都返回 true，则这个方法返回 true。\r\n//  filter()：对数组每一项都运行传入的函数，函数返回 true 的项会组成数组之后返回。\r\n//  forEach()：对数组每一项都运行传入的函数，没有返回值。\r\n//  map()：对数组每一项都运行传入的函数，返回由每次函数调用的结果构成的数组。\r\n//  some()：对数组每一项都运行传入的函数，如果有一项函数返回 true，则这个方法返回 true。\r\n\r\nlet number = [7, 23, 4, 5, 52, 25, 5];\r\nlet everyResult = number.every((item, index, array) => item > 2);\r\nconsole.log(everyResult);\r\nconst result = number.map(function (x) {\r\n  return x * 3;\r\n});\r\nconsole.log(result);\r\nconst red = [2, 4, 5];\r\nconst sum = red.reduce((acc, curr, element, index) => acc + curr);\r\n\r\nconsole.log(sum);\r\n\r\n// map\r\n// like use arrow function #ff087b\r\nconst mapResult = movements.map(x => x * 1.1);\r\nconsole.log(movements);\r\n\r\nconsole.log(mapResult);\r\nconst movementsDescription = movements.map(\r\n  (mov, i) =>\r\n    `movement ${i + 1}: You ${mov > 0 ? 'deposit' : 'withdrawal'} ${Math.abs(\r\n      mov\r\n    )}`\r\n);\r\n\r\nconsole.log(movementsDescription);\r\n\r\n// array method practice\r\n\r\nconst bankDepositSum = accounts\r\n  .flatMap(acc => acc.movements)\r\n  .filter(acc => acc > 0)\r\n  .reduce((acc, cur) => acc + cur, 0);\r\nconsole.log(bankDepositSum);\r\n\r\nconst numDeposit1000 = accounts\r\n  .flatMap(acc => acc.movements)\r\n  .reduce((count, cur) => (cur >= 1000 ? ++count : count), 0);\r\nconsole.log(numDeposit1000);\r\n\r\n// 3)\r\n// const sums = accounts.flatMap(acc => acc.movements)\r\n// .reduce((sum, cur) => {\r\n//   cur > 0 ? (sum.deposit += cur) : (sum.withdrawal += cur)\r\n\r\n// }, {deposit: 0, withdrawal: 0});\r\n\r\n// console.log(sums);\r\n// 2\r\n\r\nconst { deposit, withdrawal } = accounts\r\n  .flatMap(acc => acc.movements)\r\n  .reduce(\r\n    (sum, cur) => {\r\n      // if (cur > 0) sum.deposit += cur;\r\n      // else sum.withdrawal += cur;\r\n      sum[cur > 0 ? 'deposit' : 'withdrawal'] += cur;\r\n      return sum;\r\n    },\r\n    { deposit: 0, withdrawal: 0 }\r\n  );\r\n\r\nconsole.log(deposit, withdrawal);\r\n\r\nconst convertTitleCase = function (title) {\r\n  const capitalize = str => str[0].toUpperCase() + str.slice(1);\r\n\r\n  const exceptions = ['a', 'an', 'the', 'but', 'and', 'or', 'on', 'in', 'with'];\r\n  const titleCase = title\r\n    .toLowerCase()\r\n    .split(' ')\r\n    .map(word => (exceptions.includes(word) ? word : capitalize(word)))\r\n    .join(' ');\r\n  return capitalize(titleCase);\r\n};\r\nconsole.log(convertTitleCase('this is a nice title'));\r\nconsole.log(convertTitleCase('this is a LONG title but not too long'));\r\nconsole.log(convertTitleCase('and here is another title with an EXAMPLE'));\r\n\r\n// code challenge\r\nconst dogs = [\r\n  { weight: 22, curFood: 250, owners: ['Alice', 'Bob'] },\r\n  { weight: 8, curFood: 200, owners: ['Matilda'] },\r\n  { weight: 13, curFood: 275, owners: ['Sarah', 'John'] },\r\n  { weight: 32, curFood: 340, owners: ['Michael'] },\r\n];\r\n// GOOD LUCK\r\n\r\ndogs.forEach(dog => (dog.recFood = Math.floor(dog.weight ** 0.75 * 28)));\r\nconsole.log(dogs[2].owners);\r\nconsole.log(dogs);\r\nconst dogSarah = dogs.find(dog => dog.owners.includes('Sarah'));\r\nconsole.log(dogSarah);\r\nconsole.log(\r\n  `Sarah's dog is eating too ${\r\n    dogSarah.curFood > dogSarah.recFood ? 'much' : 'little'\r\n  }`\r\n);\r\n\r\nconst ownersEatTooMuch = dogs\r\n  .filter(dog => dog.curFood > dog.recFood)\r\n  .flatMap(dog => dog.owners);\r\nconst ownersEatTooLittle = dogs\r\n  .filter(dog => dog.curFood < dog.recFood)\r\n  .flatMap(dog => dog.owners);\r\nconsole.log(ownersEatTooLittle);\r\n\r\nconsole.log(ownersEatTooMuch);\r\n\r\nconsole.log(`${ownersEatTooMuch.join(' and ')}'s dogs eat too much`);\r\nconsole.log(`${ownersEatTooLittle.join(' and ')}'s dogs eat too little`);\r\n\r\nconsole.log(dogs.some(dog => dog.curFood === dog.recFood));\r\n\r\n// call back\r\nconst checkEatingOkay = dog =>\r\n  dog.curFood > dog.recFood * 0.9 && dog.curFood < dog.recFood * 1.1;\r\nconsole.log(dogs.some(checkEatingOkay));\r\nconsole.log(dogs.filter(checkEatingOkay));\r\n\r\nconst dogSorted = dogs.slice().sort((a, b) => a.curFood - b.curFood);\r\nconsole.log(dogSorted);\r\n\r\n// Boolean 是对应布尔值的引用类型\r\nlet booleanObject = new Boolean(true);\r\nconsole.log(typeof booleanObject);\r\nconsole.log(booleanObject);\r\n\r\nlet falseObject = new Boolean(false);\r\nlet resultBool = falseObject && true;\r\nconsole.log(resultBool);\r\n\r\nlet falseValue = false;\r\nresultBool = falseValue && false;\r\nconsole.log(resultBool);\r\n\r\n// instanceof\r\n\r\n// Number\r\n// 与 Boolean 类型一样，Number 类型重写了 valueOf()、toLocaleString()和 toString()方\r\n// 法。\r\nconsole.log(23 === 23.0);\r\n\r\nlet numberObject = new Number(10);\r\nconsole.log(numberObject);\r\n\r\nconst resultNum = 0.1 + 0.2;\r\nconsole.log(resultNum);\r\n// let num = 10;\r\n// console.log(num.toString()); // \"10\"\r\n// console.log(num.toString(2)); // \"1010\"\r\n// console.log(num.toString(8)); // \"12\"\r\n// console.log(num.toString(10)); // \"10\"\r\n// console.log(num.toString(16)); // \"a\"\r\nlet num = 10;\r\nconsole.log(typeof num.valueOf());\r\nconsole.log(num.toString(2));\r\nconsole.log(num.toString(8));\r\nconsole.log(num.toString(16));\r\nconsole.log(Number.parseInt('e23'));\r\nconsole.log(Number.parseInt('30rem'));\r\n\r\n// toFixed()方法返回包含指定小数点位数的数值字符串，\r\nnum = 10.0065;\r\nconsole.log(num.toFixed(3));\r\nconsole.log(0.2 + 0.1);\r\n// 是 toExponential()\r\nconsole.log(num.toExponential(10));\r\nlet numberValue = 10;\r\nconsole.log(typeof numberValue);\r\nconsole.log(typeof numberObject);\r\nconsole.log(numberValue instanceof Number);\r\nconsole.log(numberObject instanceof Number);\r\nconsole.log(Number.isInteger(numberValue));\r\nconsole.log(Number.isSafeInteger(2008974234234234));\r\nconsole.log(Number.parseInt('0XFF', 16));\r\nconsole.log(Number.parseInt('0101010111F', 2));\r\n// check is value is NaN\r\nconsole.log(Number.isNaN(NaN));\r\nconsole.log(Number.isNaN('werwe'));\r\nconsole.log(Number.isNaN(+'23px'));\r\nconsole.log(Number.isNaN(0 / 0));\r\n\r\n// checking is value is number\r\n// Number.isFinite() 方法用来检测传入的参数是否是一个有穷数。\r\nconsole.log(Number.isFinite(232));\r\nconsole.log(Number.isFinite('323'));\r\nconsole.log(Math.PI);\r\nconsole.log(Math.ceil(23.2));\r\nconsole.log(Math.floor(34.2));\r\nconsole.log(Math.round(34.6));\r\nconsole.log(Math.fround(34.2));\r\nconsole.log(Math.E);\r\nconsole.log(Math.LN10);\r\nconsole.log(Math.LN2);\r\nconsole.log(Math.floor(-45.8));\r\nconsole.log(Math.trunc(-45.3));\r\nconsole.log(Math.floor('45.3'));\r\n\r\n// rounding decimal\r\n// tofixed 会转换成string类型\r\nconsole.log((2.7).toFixed(2));\r\nconsole.log(typeof (2.7).toFixed(3));\r\nconsole.log(typeof +(2.4).toFixed(0));\r\n\r\n// RANDOM\r\nconst selectFrom = function (lowerValue, upperValue) {\r\n  let choice = upperValue - lowerValue + 1;\r\n  return Math.floor(Math.random() * choice + lowerValue);\r\n};\r\nconsole.log(selectFrom(2, 10));\r\n\r\nconsole.log(Math.max(12, 43, '434'));\r\nconsole.log(Math.min(12, 43, '434'));\r\nconsole.log(Math.PI * Number.parseFloat('10px') ** 2);\r\n\r\nconst randInt = (min, max) => Math.floor(Math.random() * (max - min + 1) + min);\r\nconsole.log(randInt(0, 10));\r\nconsole.log(randInt(2, 23));\r\n\r\n/*\r\n// numeric sepaarators \r\n\r\nlet diameter = 28_634_553_332_200;\r\nconsole.log(diameter);\r\nconsole.log(Number('23_300'));\r\n// console.log(434244444444444444444444444444);\r\nconst theBiggestInt = 9007199254740991n;\r\nconsole.log(typeof theBiggestInt);\r\n\r\n\r\nconst alsoHuge = BigInt(9007199254740991);\r\n// ↪ 9007199254740991n\r\n\r\nconst hugeString = BigInt(\"9007199254740991\");\r\n// ↪ 9007199254740991n\r\n\r\nconst hugeHex = BigInt(\"0x1fffffffffffff\");\r\n// ↪ 9007199254740991n\r\nconsole.log(hugeHex);\r\n\r\n\r\nconst hugeBin = BigInt(\"0b11111111111111111111111111111111111111111111111111111\");\r\n// ↪ 9007199254740991n\r\nconsole.log(hugeBin);\r\n\r\n// Operation \r\n\r\nconsole.log(2n > 1);\r\nconsole.log(hugeBin * hugeHex);\r\n\r\nif (hugeBin) console.log(alsoHuge, 'nih');\r\nconsole.log(20n == 20);\r\nconsole.log(20n === 20);\r\n\r\n\r\n\r\n\r\n\r\n\r\n// bigInt \r\n\r\nconsole.log(2 ** 100 - 1 );\r\nconsole.log(Number.MIN_SAFE_INTEGER);\r\nconsole.log(Number.MAX_SAFE_INTEGER);\r\n\r\n*/\r\n\r\n/*\r\n// DATE\r\nlet date = new Date('May 29, 2022  ');\r\nconsole.log(date);\r\nconsole.log(Date.now());\r\nconsole.log(Date.parse('Tue Jun 06 2000 23:43:50'));\r\n\r\nlet y2k = new Date(Date.UTC(2023, 3));\r\nconsole.log(new Date('Tue Jun 06 2000 23:43:50'));\r\n\r\nconsole.log(y2k);\r\nlet allFive = new Date(Date.UTC(2000, 8, 6, 15, 43, 50));\r\nconsole.log(allFive);\r\nconsole.log(allFive.getTime()); // 相互转换\r\nconsole.log(new Date(1678264040263));\r\n\r\nconsole.log(allFive.getDate());\r\nconsole.log(allFive.getDay()); //获得星期几\r\nconsole.log(allFive.getFullYear());\r\nconsole.log(allFive.getMonth());\r\nconsole.log(allFive.getHours());\r\nconsole.log(allFive.getMinutes());\r\nconsole.log(allFive.getSeconds());\r\nconsole.log(allFive.toISOString());\r\n\r\nconsole.log(new Date());\r\nconsole.log(new Date(0));\r\nconsole.log(Date.length);\r\n\r\nconsole.log(new Date(3 * 60 * 60 * 60 * 10000));\r\n\r\nconst calcDatePassed = (date1, date2) =>\r\n  Math.abs(date2 - date1) / (1000 * 60 * 60 * 24);\r\n\r\nconst day1 = calcDatePassed(new Date(2023, 3, 8), new Date(2023, 3, 18));\r\nconsole.log(`相差：${day1}天！`);\r\n\r\nconst optional = {\r\n  style: 'currency',   //currency, percent\r\n  // unit: 'mile-per-hour'\r\n  currency: 'RMB'\r\n}\r\nconst  numOfDate = 432432.2423234;\r\nconsole.log( 'US:', new Intl.NumberFormat('tt-RU', optional).format(numOfDate));\r\nconsole.log( 'US:',new Intl.NumberFormat('zh-CN', optional).format(numOfDate));\r\nconsole.log( 'US:',new Intl.NumberFormat('ar-SY', optional).format(numOfDate));\r\n\r\n\r\n*/\r\n\r\n// setTimeout \r\n\r\n\r\nconst boardPassenagers = function (n, wait) {\r\n  const perGroup = n / 3;\r\n  setTimeout(function () {\r\n    console.log(`We are now boarding all ${n} passengers`);\r\n    console.log( `There are 3 groups, each with ${perGroup} passengers`);\r\n    \r\n    \r\n    \r\n    \r\n  }, wait * 1000)\r\n  console.log(`Will start boarding in ${wait} seconds`);\r\n}\r\nboardPassenagers(27,4);\r\n\r\n\r\nconst argumentsFun = function () {\r\n  console.log(`hello: ${arguments[0]}, ${arguments[1]}`);\r\n}\r\nargumentsFun(12,\"hello\")\r\nconst ingredients = ['olives', 'spinach', 'numeric'];\r\nconst pizzaTimer = setTimeout((ing, ing2, ing3) => console.log(`Here is your pizza 🤢 with ${ing}, and ${ing2}, and ${ing3}`), 4000,\r\n...ingredients\r\n\r\n);\r\nconsole.log('waiting .....');\r\nif (ingredients.includes('spinacha')) clearTimeout(pizzaTimer)\r\n\r\n\r\n\r\n//setInterval\r\n\r\nsetInterval(() => {\r\nconst date = new Intl.DateTimeFormat('zh-CN', {\r\n  hour: 'numeric',\r\n  minute: 'numeric',\r\n  second: 'numeric'\r\n}).format(new Date())\r\n// console.log(date);\r\n\r\n  \r\n  \r\n}, 2000);\r\n//regexp\r\nconst start = Date.now();\r\n\r\nlet text = 'mom and dad and baby';\r\nlet pattern = /mom(and dad(and baby)?)?/gi;\r\nlet matches = pattern.exec(text);\r\nconsole.log(matches.index);\r\nconsole.log(matches.input);\r\nconst stop = Date.now();\r\nconsole.log(stop - start);\r\n// 继承的方法\r\n\r\n/*\r\n\r\n\r\nconsole.log(8 % 3);\r\n\r\nconst isEven = (n) => n % 2 === 0;\r\nconsole.log(isEven(4243));\r\n\r\nlabelBalance.addEventListener('click', function () {\r\n\r\n  [...document.querySelectorAll('.movements_row')].forEach((el, i) => {\r\n    if (i % 2 === 0) {\r\n      el.style.backgroundColor = '#ff4367';\r\n    }\r\n  })\r\n})\r\nconst dom = document.querySelectorAll('movements__row');\r\nconsole.log(dom);\r\n\r\n*/\r\n"],"names":["currentAccount","timer","account3","owner","movements","interestRate","pin","movementsDates","currency","locale","console","log","accounts","labelWelcome","document","querySelector","labelDate","labelBalance","labelSumIn","labelSumOut","labelSumInterest","labelTimer","containerApp","containerMovements","btnLogin","btnTransfer","btnLoan","btnClose","btnSort","inputLoginUsername","inputLoginPin","inputTransferTo","inputTransferAmount","inputLoanAmount","inputCloseUsername","inputClosePin","modal","overlay","btnCloseModal","querySelectorAll","closeModal","classList","add","window","onload","remove","addEventListener","e","key","contains","formatMovements","date","daysPassed","Math","round","abs","date2","Date","Intl","DateTimeFormat","format","formatCur","value","NumberFormat","style","updateUI","acc","displayMovements","calcDisplayBalance","calcDisplaySummary","startLogoutTimer","trick","min","String","floor","time","padStart","sec","textContent","clearInterval","opacity","setInterval","sort","movs","slice","a","b","innerHTML","forEach","mov","i","type","displayDate","displayMov","html","insertAdjacentHTML","createUser","accs","userName","toLowerCase","split","map","word","join","income","filter","reduce","cur","outCome","interest","balance","sorted","preventDefault","find","Number","year","month","day","hour","minute","weekday","blur","confirm","amount","receiveAcc","push","toISOString","some","setTimeout","index","findIndex","splice","calcAverageHumanAge","ages","age","arr","length","sums","el","includes","item","array","every","deposits","arrFlat","flat","owners","reverse","x","Array","fill","fromArr","from","Object","assign","func1","c","arguments","f","_","random","arrw","row","backgroundColor","number","red","curr","element","mapResult","flatMap","count","deposit","withdrawal","sum","convertTitleCase","title","capitalize","str","toUpperCase","exceptions","titleCase","dogs","weight","curFood","dog","recFood","dogSarah","ownersEatTooMuch","ownersEatTooLittle","checkEatingOkay","booleanObject","Boolean","resultBool","numberObject","num","valueOf","toString","parseInt","toFixed","toExponential","numberValue","isInteger","isSafeInteger","isNaN","NaN","isFinite","PI","ceil","fround","E","LN10","LN2","trunc","upperValue","parseFloat","randInt","max","wait","argumentsFun","ingredients","pizzaTimer","ing","ing2","ing3","clearTimeout","second","start","now","matches","pattern","exec","input","stop"],"version":3,"file":"index.0f020267.js.map"}